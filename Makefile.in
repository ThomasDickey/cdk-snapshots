# $Id: Makefile.in,v 1.36 2002/08/09 23:48:05 tom Exp $
#
#  Copyright 2001,2002, Thomas Dickey
#  Copyright 1999, Mike Glover
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. All advertising materials mentioning features or use of this software
#     must display the following acknowledgment:
#       This product includes software developed by Mike Glover
#       and contributors.
#  4. Neither the name of Mike Glover, nor the names of contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY MIKE GLOVER AND CONTRIBUTORS ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED.  IN NO EVENT SHALL MIKE GLOVER OR CONTRIBUTORS BE LIABLE
#  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
#  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
#  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
#  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#  SUCH DAMAGE.
#
SHELL		= /bin/sh

LIBTOOL		= @LIBTOOL@
LIB_SUFFIX	= @LIB_SUFFIX@

VERSION_MAJOR	= @VERSION_MAJOR@
VERSION_MINOR	= @VERSION_MINOR@
VERSION		= $(VERSION_MAJOR).$(VERSION_MINOR)
CDKLIB		= @LIB_PREFIX@cdk$(LIB_SUFFIX)
CDKSHLIB	= @LIB_PREFIX@cdk.so.$(VERSION)
SONAME		= @LIB_PREFIX@cdk.so.$(VERSION_MAJOR)

prefix		= @prefix@
exec_prefix	= @exec_prefix@

srcdir		= @srcdir@
VPATH		= $(srcdir)

DESTDIR		=
includedir	= $(DESTDIR)@includedir@
libdir		= $(DESTDIR)@libdir@
mandir		= $(DESTDIR)@mandir@

DOCUMENT_DIR	= @prefix@/doc/cdk
INCLUDE_DIR	= $(includedir)/cdk
LIB_DIR		= $(libdir)
MAN_DIR		= $(mandir)/man3

LIBS		= @LIBS@

CFLAGS		= @CFLAGS@ @EXTRA_CFLAGS@
CPPFLAGS	= @DEFS@ -I./include -I$(srcdir)/include @CPPFLAGS@

CC		= @CC@
LDFLAGS		= @LDFLAGS@
LIB_CREATE	= @LIB_CREATE@
RANLIB		= @RANLIB@

RM		= rm -f

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
INSTALL_LIB	= @INSTALL_LIB@ $(INSTALL_DATA)
UNINSTALL_LIB	= @UNINSTALL_LIB@ $(RM)

.SUFFIXES: .c .o .os

DEFAULT		= $(CDKLIB) headers.sed

default :: $(DEFAULT)

#
# Create the file lists.
#
CDKHDR		= \
		alphalist.h \
		binding.h \
		button.h \
		buttonbox.h \
		calendar.h \
		cdk.h \
		cdk_config.h \
		cdk_objs.h \
		cdk_util.h \
		cdk_version.h \
		cdkscreen.h \
		curdefs.h \
		dialog.h \
		draw.h \
		entry.h \
		fscale.h \
		fselect.h \
		graph.h \
		histogram.h \
		itemlist.h \
		label.h \
		marquee.h \
		matrix.h \
		mentry.h \
		menu.h \
		radio.h \
		scale.h \
		scroll.h \
		selection.h \
		slider.h \
		swindow.h \
		template.h \
		traverse.h \
		viewer.h

CDKSRC		= \
		alphalist.c \
		binding.c \
		button.c \
		buttonbox.c \
		calendar.c \
		cdk.c \
		cdkscreen.c \
		debug.c \
		dialog.c \
		draw.c \
		entry.c \
		fscale.c \
		fselect.c \
		graph.c \
		histogram.c \
		itemlist.c \
		label.c \
		marquee.c \
		matrix.c \
		mentry.c \
		menu.c \
		position.c \
		radio.c \
		scale.c \
		scroll.c \
		selection.c \
		slider.c \
		swindow.c \
		template.c \
		traverse.c \
		version.c \
		viewer.c

CDKMAN		= \
		cdk.3 \
		cdk_alphalist.3 \
		cdk_binding.3 \
		cdk_button.3 \
		cdk_buttonbox.3 \
		cdk_calendar.3 \
		cdk_dialog.3 \
		cdk_display.3 \
		cdk_entry.3 \
		cdk_fscale.3 \
		cdk_fselect.3 \
		cdk_graph.3 \
		cdk_histogram.3 \
		cdk_itemlist.3 \
		cdk_label.3 \
		cdk_marquee.3 \
		cdk_matrix.3 \
		cdk_mentry.3 \
		cdk_menu.3 \
		cdk_misc.3 \
		cdk_position.3 \
		cdk_process.3 \
		cdk_radio.3 \
		cdk_scale.3 \
		cdk_screen.3 \
		cdk_scroll.3 \
		cdk_selection.3 \
		cdk_slider.3 \
		cdk_swindow.3 \
		cdk_template.3 \
		cdk_traverse.3 \
		cdk_viewer.3

CDKREADME	= BUGS EXPANDING NOTES TODO COPYING INSTALL README

OBJECTS		= $(CDKSRC:.c=.o)
CDKSHOBJS	= $(CDKSRC:.c=.os)
LIB_OBJECT	= @LIB_OBJECT@

all $(OBJECTS) ::	include/cdk_config.h


#
# Standard library directive.
#
all cdklib :: $(DEFAULT)

$(CDKLIB) :: $(OBJECTS)
	@echo creating $@; $(LIB_CREATE) $@ $(LIB_OBJECT)
	@$(RANLIB) $@

cdkshlib $(CDKSHLIB) :: $(CDKSHOBJS) headers.sed
	gcc -shared -Wl,-soname=$(SONAME) $(LDFLAGS) -o $(CDKSHLIB) $(CDKSHOBJS)

#
# Make the examples directory.
#
all examples ::
	cd examples && make

#
# Make the demos directory.
#
all demos ::
	cd demos && make

#
# Make the cli directory.
#
all cli ::
	cd cli && make

# Order of install-targets should match the order of uninstalls.  Put the
# documentation first, then the headers, and finally the library:
#	(un)installCDKReadme
#	(un)installCDKManPages
#	(un)installCDKHeaderFiles
#	(un)installCDKLibrary

#
# This installs the informational readme files.
#
install \
installCDKReadme :: $(DOCUMENT_DIR)
	@echo "Installing CDK Readme files in $(DOCUMENT_DIR)..."
	@for i in $(CDKREADME); do \
	   echo "	... $$i"; \
	   $(INSTALL_DATA) $(srcdir)/$$i $(DOCUMENT_DIR)/$$i; \
	done

uninstall \
uninstallCDKReadme ::
	@echo "Uninstalling CDK Readme files from $(DOCUMENT_DIR)..."
	@- for i in $(CDKREADME); do \
	   $(RM) $(DOCUMENT_DIR)/$$i; \
	done

#
# This installs the CDK man pages.
#
install \
installCDKManPages :: headers.sed $(MAN_DIR)
	@echo "Installing the CDK man pages in $(MAN_DIR) ..."
	@for i in $(CDKMAN); do \
	   $(SHELL) $(srcdir)/headers.sh $(INSTALL_DATA) $(MAN_DIR) $(srcdir) man/$$i; \
	   $(SHELL) $(srcdir)/manlinks.sh installing $(srcdir) $(MAN_DIR) $(srcdir)/man/$$i;  \
	done

uninstall \
uninstallCDKManPages ::
	@echo "Uninstalling the CDK man pages from $(MAN_DIR) ..."
	@- for i in $(CDKMAN); do \
	   $(RM) $(MAN_DIR)/$$i;
	   $(SHELL) $(srcdir)/manlinks.sh removing $(srcdir) $(MAN_DIR) $(srcdir)/man/$$i; \
	done

#
# This installs the header files.
#
install \
installCDKHeaderFiles :: headers.sed $(INCLUDE_DIR)
	@echo "Installing CDK header files in $(INCLUDE_DIR)..."
	@for i in $(CDKHDR); do \
	   $(SHELL) $(srcdir)/headers.sh $(INSTALL_DATA) $(INCLUDE_DIR) $(srcdir) include/$$i; \
	done

uninstall \
uninstallCDKHeaderFiles ::
	@echo "Uninstalling CDK header files from $(INCLUDE_DIR)..."
	@- for i in $(CDKHDR); do \
	   $(RM) $(INCLUDE_DIR)/$$i; \
	done

#
# This installs the CDK library.
#
install \
installCDKLibrary :: $(LIB_DIR) $(CDKLIB)
	@echo "Installing CDK library"
	@$(INSTALL_LIB) $(CDKLIB) $(LIB_DIR)/$(CDKLIB)

uninstall \
uninstallCDKLibrary ::
	@echo "Uninstalling CDK library"
	@- $(UNINSTALL_LIB) $(LIB_DIR)/$(CDKLIB) 

#
# This installs the CDK shared library.  The rules are for an RPM spec, and
# not of general interest.
#
installCDKSHLibrary :: $(LIB_DIR) $(CDKSHLIB)
	@echo "Installing CDK library"
	@echo "	$(INSTALL_DATA) $(CDKSHLIB) $(LIB_DIR)"
	@$(INSTALL_DATA) $(CDKSHLIB) $(LIB_DIR)
	@echo " ln -sf $(CDKSHLIB) $(LIB_DIR)/@LIB_PREFIX@cdk.so"
	@ln -sf $(CDKSHLIB) $(LIB_DIR)/@LIB_PREFIX@cdk.so

uninstall \
uninstallCDKSHLibrary ::
	@- $(RM) $(LIB_DIR)/@LIB_PREFIX@cdk.so
	@- $(RM) $(LIB_DIR)/$(CDKSHLIB) 

headers.sed : $(srcdir)/headers.sh
	$(SHELL) $(srcdir)/headers.sh $(INCLUDE_DIR) $(srcdir)/include

#
# Clean up after ourselves...
#
clean ::
	$(RM) -fr .libs
	$(RM) *.[oa] *.l[oa] *.os $(CDKLIB) $(CDKSHLIB) headers.sed core tags *~

realclean :: clean
	cd examples	&& make clean
	cd demos	&& make clean
	cd cli		&& make clean

#
# Use this to clean the distribution.
#
distclean :: realclean
	$(RM) config.cache config.log config.status
	cd examples	&& $(RM) Makefile
	cd demos	&& $(RM) Makefile
	cd cli		&& $(RM) Makefile
	$(RM) include/cdk_config.h
	$(RM) include/cdk_version.h
	$(RM) Makefile

#
# Standard .c to .o compile line.
#
.c.o:
@RULE_CC@
	@ECHO_CC@$(LIBTOOL) $(CC) $(CFLAGS) $(CPPFLAGS) -c $<

.c.os:
@RULE_CC@
	@ECHO_CC@$(CC) $(CFLAGS) $(CPPFLAGS) -c -fPIC $< -o $@	

$(DOCUMENT_DIR) \
$(INCLUDE_DIR) \
$(LIB_DIR) \
$(MAN_DIR) : ; $(srcdir)/mkdirs.sh $@
